name: (Pre-Release) Build YTLitePlusEXTRA IPA
on:
  workflow_dispatch:
    inputs:
      ipa_url:
        description: "URL to the decrypted IPA file"
        default: ""
        required: true
        type: string

      deb_url:
        description: "URL to your YTLite .deb file"
        default: ""
        required: true
        type: string

      display_name:
        description: "App Name (Optional)"
        default: "YouTube"
        required: true
        type: string

      bundle_id:
        description: "BundleID (Optional)"
        default: "com.google.ios.youtube"
        required: true
        type: string

      upload_artifact:
        description: "Upload IPA as an artifact (Public)"
        default: true
        required: false
        type: boolean

      catbox_upload:
        description: "Upload IPA to Catbox.moe (URL)"
        default: true
        required: false
        type: boolean
        
      draft_release:
        description: "Create a draft release (Private)"
        default: true
        required: false
        type: boolean

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build YTLitePlusEXTRA IPA
    runs-on: macos-latest
    permissions:
      contents: write

    steps:
      - name: Check Inputs
        if: ${{ !inputs.upload_artifact && !inputs.draft_release && !inputs.catbox_upload }}
        run: |
          echo "No IPA output way selected. Please choose at least one."
          exit 1

      - name: Hide Sensitive Inputs
        uses: levibostian/action-hide-sensitive-inputs@v1
        with:
          exclude_inputs: bundle_id,display_name,tweak_version,draft_release,upload_artifact,catbox_upload
          
      - name: Download and Validate IPA
        run: |
          wget ${{ inputs.ipa_url }} --no-verbose -O youtube.ipa

          ipa_type=$(file --mime-type -b youtube.ipa)

          if [[ "$ipa_type" != "application/x-ios-app" && "$ipa_type" != "application/zip" ]]; then
            echo "::error::Validation failed: The downloaded file is not a valid IPA. Detected type: $ipa_type."
            exit 1
          fi
 
      - name: Get YouTube Version 
        run: |
          unzip -q youtube.ipa -d ytextracted
          echo "YT_VERSION=$(grep -A 1 '<key>CFBundleVersion</key>' ytextracted/Payload/YouTube.app/Info.plist | grep '<string>' | awk -F'[><]' '{print $3}')" >> $GITHUB_ENV
          echo -e 'Done!'

      - name: Install Dependencies
        run: brew install make ldid swiftlint

      - name: Set PATH Environment Variable
        run: echo "$(brew --prefix make)/libexec/gnubin" >> $GITHUB_PATH

      - name: Clone Theos
        run: git clone --quiet --recurse-submodules https://github.com/theos/theos.git
        
      - name: Download iOS SDK
        run: |
          git clone --quiet -n --depth=1 --filter=tree:0 https://github.com/xybp888/iOS-SDKs.git
          cd iOS-SDKs
          git sparse-checkout set --no-cone iPhoneOS18.6.sdk
          git checkout
          mv *.sdk $THEOS/sdks
        env:
          THEOS: ${{ github.workspace }}/theos

      - name: Install cyan and tbd
        run: |
          pipx install --force https://github.com/asdfzxcvbn/pyzule-rw/archive/main.zip
          wget --no-verbose https://github.com/inoahdev/tbd/releases/download/2.2/tbd-mac -O /usr/local/bin/tbd
          chmod +x /usr/local/bin/tbd 

      - name: Download and Validate your YTLite .deb 
        run: |
          wget ${{ inputs.deb_url }} --no-verbose -O ytlite.deb

          deb_type=$(file --mime-type -b ytlite.deb)

          if [[ "$deb_type" != "application/vnd.debian.binary-package" ]]; then
            echo "::error::Validation failed: The downloaded file is not a valid deb. Detected type: $deb_type."
            exit 1
          fi

      - name: Get YTLite Version
        run: |
          ar x ytlite.deb control.tar.gz >/dev/null 2>&1
          tar -xzf control.tar.gz ./control
          VERSION=$(grep '^Version:' control | cut -d ' ' -f2)
          echo "YTLITE_VERSION=$VERSION" >> $GITHUB_ENV
          echo -e 'Done!'

      - name: Clone Open in YouTube (Safari Extension)
        run: |
          git clone --quiet -n --depth=1 --filter=tree:0 https://github.com/BillyCurtis/OpenYouTubeSafariExtension.git
          cd OpenYouTubeSafariExtension
          git sparse-checkout set --no-cone OpenYouTubeSafariExtension.appex
          git checkout
          mv *.appex ${{ github.workspace }}

      - name: Clone YouTubeHeader
        run: |
           cd $THEOS/include
           git clone --quiet https://github.com/PoomSmart/YouTubeHeader.git
           cp -r "$THEOS/include/YouTubeHeader" "$THEOS/include/YTHeaders"
        env:
          THEOS: ${{ github.workspace }}/theos

      - name: Clone PSHeader
        run: |
           cd $THEOS/include
           git clone --quiet https://github.com/PoomSmart/PSHeader.git
        env:
          THEOS: ${{ github.workspace }}/theos

      - name: Clone YouPiP
        run: git clone --quiet https://github.com/PoomSmart/YouPiP.git
    
      - name: Clone YTUHD
        run: git clone --quiet https://github.com/Tonwalter888/YTUHD.git
           
      - name: Clone Return-YouTube-Dislikes
        run: git clone --quiet https://github.com/PoomSmart/Return-YouTube-Dislikes.git

      - name: Clone YouGroupSettings
        run: git clone --quiet https://github.com/PoomSmart/YouGroupSettings.git
           
      - name: Clone YTVideoOverlay
        run: git clone --quiet https://github.com/PoomSmart/YTVideoOverlay.git
          
      - name: Clone YTABConfig
        run: git clone --quiet https://github.com/PoomSmart/YTABConfig.git
                  
      - name: Clone YouQuality
        run: git clone --quiet https://github.com/PoomSmart/YouQuality.git

      - name: Clone YouSpeed
        run: git clone --quiet https://github.com/PoomSmart/YouSpeed.git

      - name: Clone DontEatMyContent
        run: git clone --quiet https://github.com/therealFoxster/DontEatMyContent.git

      - name: Clone IAmYouTube
        run: git clone --quiet https://github.com/PoomSmart/IAmYouTube.git

      - name: Clone YouMute
        run: git clone --quiet https://github.com/PoomSmart/YouMute.git

      - name: Clone YTABGoodies
        run: git clone --quiet https://github.com/PoomSmart/YTABGoodies.git

      - name: Clone YouTimeStamp
        run: git clone --quiet https://github.com/Tonwalter888/YouTimeStamp.git
    
      - name: Clone YouLoop
        run: git clone --quiet https://github.com/Tonwalter888/YouLoop.git

      - name: Clone Alderis
        run: git clone --quiet https://github.com/hbang/Alderis.git

      - name: Clone YouSlider
        run: git clone --quiet https://github.com/PoomSmart/YouSlider.git

      - name: Clone YouChooseQuality
        run: git clone --quiet https://github.com/PoomSmart/YouChooseQuality.git

      - name: Clone YTSilentVote
        run: git clone --quiet https://github.com/PoomSmart/YTSilentVote.git

      - name: Clone YouShare
        run: git clone --quiet https://github.com/Tonwalter888/YouShare.git
      
      - name: Build YouPiP
        run: |
          cd YouPiP
          make clean package DEBUG=0 FINALPACKAGE=1
          mv packages/*.deb ${{ github.workspace }}/youpip.deb
        env:
          THEOS: ${{ github.workspace }}/theos    

      - name: Build YTUHD
        run: |
          cd YTUHD
          make clean package DEBUG=0 FINALPACKAGE=1
          mv packages/*.deb ${{ github.workspace }}/ytuhd.deb
        env:
          THEOS: ${{ github.workspace }}/theos

      - name: Build Return-YouTube-Dislikes
        run: |
          cd Return-YouTube-Dislikes
          make clean package DEBUG=0 FINALPACKAGE=1
          mv packages/*.deb ${{ github.workspace }}/ryd.deb
        env:
          THEOS: ${{ github.workspace }}/theos

      - name: Build YouGroupSettings
        run: |
          cd YouGroupSettings
          make clean package DEBUG=0 FINALPACKAGE=1
          mv packages/*.deb ${{ github.workspace }}/ygs.deb
        env:
          THEOS: ${{ github.workspace }}/theos

      - name: Build YTVideoOverlay
        run: |
          cd YTVideoOverlay
          make clean package DEBUG=0 FINALPACKAGE=1
          mv packages/*.deb ${{ github.workspace }}/ytvo.deb
        env:
          THEOS: ${{ github.workspace }}/theos

      - name: Build YTABConfig
        run: |
          cd YTABConfig
          make clean package DEBUG=0 FINALPACKAGE=1
          mv packages/*.deb ${{ github.workspace }}/ytabconfig.deb
        env:
          THEOS: ${{ github.workspace }}/theos

      - name: Build YouQuality
        run: |
          cd YouQuality
          make clean package DEBUG=0 FINALPACKAGE=1
          mv packages/*.deb ${{ github.workspace }}/youquality.deb
        env:
          THEOS: ${{ github.workspace }}/theos

      - name: Build YouSpeed
        run: |
          cd YouSpeed
          make clean package DEBUG=0 FINALPACKAGE=1
          mv packages/*.deb ${{ github.workspace }}/youspeed.deb
        env:
          THEOS: ${{ github.workspace }}/theos

      - name: Build DontEatMyContent
        run: |
          cd DontEatMyContent
          make clean package DEBUG=0 FINALPACKAGE=1 
          mv packages/*.deb ${{ github.workspace }}/demc.deb
        env:
          THEOS: ${{ github.workspace }}/theos

      - name: Build IAmYouTube
        run: |
          cd IAmYouTube
          make clean package DEBUG=0 FINALPACKAGE=1 
          mv packages/*.deb ${{ github.workspace }}/imyt.deb
        env:
          THEOS: ${{ github.workspace }}/theos

      - name: Build YouMute
        run: |
          cd YouMute
          make clean package DEBUG=0 FINALPACKAGE=1 
          mv packages/*.deb ${{ github.workspace }}/ym.deb
        env:
          THEOS: ${{ github.workspace }}/theos 

      - name: Build YTABGoodies
        run: |
          cd YTABGoodies
          make clean package DEBUG=0 FINALPACKAGE=1
          mv packages/*.deb ${{ github.workspace }}/ytgoodab.deb
        env:
          THEOS: ${{ github.workspace }}/theos

      - name: Build YouTimeStamp
        run: |
          cd YouTimeStamp
          make clean package DEBUG=0 FINALPACKAGE=1
          mv packages/*.deb ${{ github.workspace }}/youts.deb
        env:
          THEOS: ${{ github.workspace }}/theos

      - name: Build YouLoop
        run: |
          cd YouLoop
          make clean package DEBUG=0 FINALPACKAGE=1
          mv packages/*.deb ${{ github.workspace }}/youloop.deb
        env:
          THEOS: ${{ github.workspace }}/theos

      - name: Build YouSlider
        run: |
          cd YouSlider
          make clean package DEBUG=0 FINALPACKAGE=1
          mv packages/*.deb ${{ github.workspace }}/youslider.deb
        env:
          THEOS: ${{ github.workspace }}/theos

      - name: Build Alderis
        run: |
          cd Alderis
          make clean package DEBUG=0 FINALPACKAGE=1
          mv packages/*.deb ${{ github.workspace }}/alderis.deb
        env:
          THEOS: ${{ github.workspace }}/theos

      - name: Build YouChooseQuality
        run: |
          cd YouChooseQuality
          make clean package DEBUG=0 FINALPACKAGE=1
          mv packages/*.deb ${{ github.workspace }}/youchoose.deb
        env:
          THEOS: ${{ github.workspace }}/theos

      - name: Build YTSilentVote
        run: |
          cd YTSilentVote
          make clean package DEBUG=0 FINALPACKAGE=1
          mv packages/*.deb ${{ github.workspace }}/ytnovote.deb
        env:
          THEOS: ${{ github.workspace }}/theos  

      - name: Build YouShare
        run: |
          cd YouShare
          make clean package DEBUG=0 FINALPACKAGE=1
          mv packages/*.deb ${{ github.workspace }}/youshare.deb
        env:
          THEOS: ${{ github.workspace }}/theos  
  
      - name: Inject Tweaks Into IPA
        run: |
          tweaks="ytlite.deb OpenYouTubeSafariExtension.appex"

          for f in *.deb; do
            if [ -f "$f" ]; then
              tweaks="$tweaks $f"
            fi
          done
          
          cyan -i youtube.ipa -o YTLitePlusEXTRA_${{ env.YT_VERSION }}_v${{ env.YTLITE_VERSION }}.ipa -uwef $tweaks -n "${{ inputs.display_name }}" -b ${{ inputs.bundle_id }}

      - name: Upload IPA to Catbox
        if: ${{ inputs.catbox_upload }}
        run: |
          RESPONSE=$(curl -F "reqtype=fileupload" -F "fileToUpload=@YTLitePlusEXTRA_${{ env.YT_VERSION }}_v${{ env.YTLITE_VERSION }}.ipa" https://catbox.moe/user/api.php)
          CATBOX_URL=$(echo $RESPONSE | grep -o -E 'https://files.catbox.moe/[^"]*')
          echo "Uploaded artifact to $CATBOX_URL"
          CATBOX_FILE=$(echo $CATBOX_URL | sed 's|https://files.catbox.moe/||')
          echo "CATBOX_FILE=$CATBOX_FILE" >> $GITHUB_ENV
          echo "CATBOX_URL=$CATBOX_URL" >> $GITHUB_ENV

      - name: Upload IPA as an Artifact
        if: ${{ inputs.upload_artifact }}
        uses: actions/upload-artifact@v4.6.2
        with:
          name: YTLitePlusEXTRA_${{ env.YT_VERSION }}_v${{ env.YTLITE_VERSION }}
          path: YTLitePlusEXTRA_${{ env.YT_VERSION }}_v${{ env.YTLITE_VERSION }}.ipa

      - name: Create a Draft Release
        if: ${{ inputs.draft_release }}
        uses: softprops/action-gh-release@v2.3.3
        with:
          tag_name: ytliteplusextra-pre-release-ipa${{ github.run_number }}
          name: YTLitePlusEXTRA_${{ env.YT_VERSION }}_v${{ env.YTLITE_VERSION }} (${{ github.run_number }}) 
          files: YTLitePlusEXTRA_${{ env.YT_VERSION }}_v${{ env.YTLITE_VERSION }}.ipa
          draft: true

      - name: Job Summary - Build Complete
        run: |
          echo -e '### 🛠️ Build YTLitePlusEXTRA IPA Complete!' >> $GITHUB_STEP_SUMMARY

      - name: Job Summary - Output the Artifact Upload
        if: ${{ inputs.upload_artifact }}
        run: |
          echo -e '### 📦 Artifact Upload\n\nUpload IPA as an artifact successfully! [Scroll down](#artifacts) to view the artifact. Note that you must be signed in to GitHub to download it.' >> $GITHUB_STEP_SUMMARY

      - name: Job Summary - Output the IPA URL (Catbox Upload)
        if: ${{ inputs.catbox_upload }}
        run: |
          echo -e '### 🐱 Catbox Upload\n\nUpload IPA to Catbox successfully! Here is a permanent shareable link: '$CATBOX_URL >> $GITHUB_STEP_SUMMARY

      - name: Job Summary - Output a Draft Release Link
        if: ${{ inputs.draft_release }}
        run: |
          echo -e '### 🚀 Draft Release\n\nDraft release has been created successfully! You can view your release here: https://github.com/${{ github.repository }}/releases' >> $GITHUB_STEP_SUMMARY
     
      - name: Job Summary - Cleanup
        run: |
          echo -e '### 🧹 Cleanup\n\nYou can remove previous GitHub Actions run here: https://github.com/${{ github.repository }}/actions/workflows/delete-old-workflows-run.yml And if you want to delelte old draft release you have then here: https://github.com/${{ github.repository }}/actions/workflows/delete-old-draft-releases.yml' >> $GITHUB_STEP_SUMMARY
